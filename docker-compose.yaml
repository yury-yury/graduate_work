---
version: "3.9"

services:

  frontend:
    image: sermalenk/skypro-front:lesson-34
    container_name: frontend
    ports:
        - "88:80"
    depends_on:
        - api

  api:
    build:
      context: .
    image: yuryyury/todolist
    container_name: api
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    volumes:
      - /home/yury/SkyPro/Home_Work/34/todolist/django_static:/todolist/django_static
      - /home/yury/SkyPro/Home_Work/34/todolist/django_media:/todolist/django_media
      - /home/yury/SkyPro/Home_Work/34/todolist/.env:/todolist/.env
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

  migrations:
    build:
      context: .
    image: yuryyury/todolist
    container_name: migrations
    volumes:
      - /home/yury/SkyPro/Home_Work/34/todolist/.env:/todolist/.env
#    env_file:
#      - ./.env:./.env
    command: python manage.py migrate
#      - python manage.py shell -c "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.create_superuser('${SUPERUSER_USERNAME}', '${SUPERUSER_EMAIL}', '${SUPERUSER_PASSWORD}')"
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
      image: postgres:15.0-alpine
      ports:
        - "5432"
      environment:
        POSTGRES_DB: ${DB_NAME}
        POSTGRES_USER: ${DB_USER}
        POSTGRES_PASSWORD: ${DB_PASSWORD}
      restart: always
      container_name: postgres
      volumes:
        - /home/yury/SkyPro/Home_Work/34/todolist/postgresdata:/var/lib/postgresql/data
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
        interval: 5s
        timeout: 5s
        retries: 15
...
